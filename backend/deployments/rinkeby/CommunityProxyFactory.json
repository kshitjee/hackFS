{
  "address": "0xBB4a18773C5F036Ad821059dd3574320934b567F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementationCommunity",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_implementationCollection",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_clone",
          "type": "address"
        }
      ],
      "name": "NewClone",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allClones",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createNewCommunity",
      "outputs": [
        {
          "internalType": "address",
          "name": "instance",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementationCollection",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementationCommunity",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5776fb6c7bb4d2a36f03c3d589ba884ab7bcc6531c811ba4fb4edd2ed0dcbea2",
  "receipt": {
    "to": null,
    "from": "0x0c670AcA9AA0285B961F1D4AB7D4e462C7982311",
    "contractAddress": "0xBB4a18773C5F036Ad821059dd3574320934b567F",
    "transactionIndex": 3,
    "gasUsed": "620648",
    "logsBloom": "0x
    "blockHash": "0xea53b493ca8ed9fd2578c6d60d74d9ad9d4d7bc16ff23327d3f58a466621cc1d",
    "transactionHash": "0x5776fb6c7bb4d2a36f03c3d589ba884ab7bcc6531c811ba4fb4edd2ed0dcbea2",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 11077250,
        "transactionHash": "0x5776fb6c7bb4d2a36f03c3d589ba884ab7bcc6531c811ba4fb4edd2ed0dcbea2",
        "address": "0xBB4a18773C5F036Ad821059dd3574320934b567F",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000c670aca9aa0285b961f1d4ab7d4e462c7982311"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xea53b493ca8ed9fd2578c6d60d74d9ad9d4d7bc16ff23327d3f58a466621cc1d"
      }
    ],
    "blockNumber": 11077250,
    "cumulativeGasUsed": "1704014",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xc72DF9762e0e71015bC81f6864F3cd50C2e6C33c",
    "0xa2af19E78dA3E5910Ed6253344F022a02544544f"
  ],
  "numDeployments": 3,
  "solcInputHash": "856a7bc07fd388e4475a323ab2022ad8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementationCommunity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_implementationCollection\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_clone\",\"type\":\"address\"}],\"name\":\"NewClone\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allClones\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createNewCommunity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"instance\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationCommunity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CommunityProxyFactory.sol\":\"CommunityProxyFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/Clones.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xae614c6b103b743c62e9544632f7ef4fc8950de4e9c783d2e765a3b86701dda3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/CommunityProxyFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"../interfaces/ICommunity.sol\\\";\\n\\n\\ncontract CommunityProxyFactory is Ownable {\\n    address public implementationCommunity;\\n    address public implementationCollection;\\n\\n    address[] public allClones;\\n\\n    event NewClone(address _clone);\\n\\n    constructor(\\n        address _implementationCommunity,\\n        address _implementationCollection\\n    ) {\\n        implementationCommunity = _implementationCommunity;\\n        implementationCollection = _implementationCollection;\\n    }\\n\\n    function createNewCommunity() external returns (address instance) {\\n        instance = Clones.clone(implementationCommunity);\\n        ICommunity(instance).initialize(implementationCollection);\\n\\n        // (bool success, ) = instance.call(\\n        //     abi.encodeWithSignature(\\n        //         \\\"initialize(address)\\\",\\n        //         implementationCollection\\n        //     )\\n        // );\\n\\n        // require(\\n        //     success,\\n        //     \\\"#CommunityProxyFactory: Couldn't create a new community clone!\\\"\\n        // );\\n        \\n        allClones.push(instance);\\n        emit NewClone(instance);\\n        return instance;\\n    }\\n}\\n\",\"keccak256\":\"0x659b96a22bfb7b71b9378d861a6742ad0410d6474a0314107be400e925297a0f\",\"license\":\"MIT\"},\"interfaces/ICommunity.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\n/* COLLECTION INTERFACE */\\ninterface ICommunity {\\n    function initialize(address _collectionImplemenation) external;\\n}\\n\",\"keccak256\":\"0x82dba1f6d8056b5b2acb23495187421a5931b1d3573a08fe6df046777e5d3278\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610b37380380610b3783398181016040528101906100329190610206565b61004e6100436100d760201b60201c565b6100df60201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610246565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101d3826101a8565b9050919050565b6101e3816101c8565b81146101ee57600080fd5b50565b600081519050610200816101da565b92915050565b6000806040838503121561021d5761021c6101a3565b5b600061022b858286016101f1565b925050602061023c858286016101f1565b9150509250929050565b6108e2806102556000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063bf6471051161005b578063bf647105146100c8578063d7741cad146100e6578063ea20c45914610116578063f2fde38b146101345761007d565b806369bf27a314610082578063715018a6146100a05780638da5cb5b146100aa575b600080fd5b61008a610150565b6040516100979190610655565b60405180910390f35b6100a8610176565b005b6100b261018a565b6040516100bf9190610655565b60405180910390f35b6100d06101b3565b6040516100dd9190610655565b60405180910390f35b61010060048036038101906100fb91906106ab565b6101d9565b60405161010d9190610655565b60405180910390f35b61011e610218565b60405161012b9190610655565b60405180910390f35b61014e60048036038101906101499190610704565b610371565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61017e6103f5565b6101886000610473565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106101e957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610245600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610537565b90508073ffffffffffffffffffffffffffffffffffffffff1663c4d66de8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016102a29190610655565b600060405180830381600087803b1580156102bc57600080fd5b505af11580156102d0573d6000803e3d6000fd5b505050506003819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcc1e9c890bc4f4943c457abb8d17f97703b9f7144e1f4a69e50c6e4988ef38b7816040516103669190610655565b60405180910390a190565b6103796103f5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e0906107b4565b60405180910390fd5b6103f281610473565b50565b6103fd61060c565b73ffffffffffffffffffffffffffffffffffffffff1661041b61018a565b73ffffffffffffffffffffffffffffffffffffffff1614610471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046890610820565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe9061088c565b60405180910390fd5b919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061063f82610614565b9050919050565b61064f81610634565b82525050565b600060208201905061066a6000830184610646565b92915050565b600080fd5b6000819050919050565b61068881610675565b811461069357600080fd5b50565b6000813590506106a58161067f565b92915050565b6000602082840312156106c1576106c0610670565b5b60006106cf84828501610696565b91505092915050565b6106e181610634565b81146106ec57600080fd5b50565b6000813590506106fe816106d8565b92915050565b60006020828403121561071a57610719610670565b5b6000610728848285016106ef565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061079e602683610731565b91506107a982610742565b604082019050919050565b600060208201905081810360008301526107cd81610791565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061080a602083610731565b9150610815826107d4565b602082019050919050565b60006020820190508181036000830152610839816107fd565b9050919050565b7f455243313136373a20637265617465206661696c656400000000000000000000600082015250565b6000610876601683610731565b915061088182610840565b602082019050919050565b600060208201905081810360008301526108a581610869565b905091905056fea26469706673582212201c89b2a2e8af0c6a199408d5f96f6d7b5f0626ab38f272f7aa795ef1a60d262b64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063bf6471051161005b578063bf647105146100c8578063d7741cad146100e6578063ea20c45914610116578063f2fde38b146101345761007d565b806369bf27a314610082578063715018a6146100a05780638da5cb5b146100aa575b600080fd5b61008a610150565b6040516100979190610655565b60405180910390f35b6100a8610176565b005b6100b261018a565b6040516100bf9190610655565b60405180910390f35b6100d06101b3565b6040516100dd9190610655565b60405180910390f35b61010060048036038101906100fb91906106ab565b6101d9565b60405161010d9190610655565b60405180910390f35b61011e610218565b60405161012b9190610655565b60405180910390f35b61014e60048036038101906101499190610704565b610371565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61017e6103f5565b6101886000610473565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106101e957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610245600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610537565b90508073ffffffffffffffffffffffffffffffffffffffff1663c4d66de8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016102a29190610655565b600060405180830381600087803b1580156102bc57600080fd5b505af11580156102d0573d6000803e3d6000fd5b505050506003819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcc1e9c890bc4f4943c457abb8d17f97703b9f7144e1f4a69e50c6e4988ef38b7816040516103669190610655565b60405180910390a190565b6103796103f5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e0906107b4565b60405180910390fd5b6103f281610473565b50565b6103fd61060c565b73ffffffffffffffffffffffffffffffffffffffff1661041b61018a565b73ffffffffffffffffffffffffffffffffffffffff1614610471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046890610820565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe9061088c565b60405180910390fd5b919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061063f82610614565b9050919050565b61064f81610634565b82525050565b600060208201905061066a6000830184610646565b92915050565b600080fd5b6000819050919050565b61068881610675565b811461069357600080fd5b50565b6000813590506106a58161067f565b92915050565b6000602082840312156106c1576106c0610670565b5b60006106cf84828501610696565b91505092915050565b6106e181610634565b81146106ec57600080fd5b50565b6000813590506106fe816106d8565b92915050565b60006020828403121561071a57610719610670565b5b6000610728848285016106ef565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061079e602683610731565b91506107a982610742565b604082019050919050565b600060208201905081810360008301526107cd81610791565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061080a602083610731565b9150610815826107d4565b602082019050919050565b60006020820190508181036000830152610839816107fd565b9050919050565b7f455243313136373a20637265617465206661696c656400000000000000000000600082015250565b6000610876601683610731565b915061088182610840565b602082019050919050565b600060208201905081810360008301526108a581610869565b905091905056fea26469706673582212201c89b2a2e8af0c6a199408d5f96f6d7b5f0626ab38f272f7aa795ef1a60d262b64736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1922,
        "contract": "contracts/CommunityProxyFactory.sol:CommunityProxyFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2503,
        "contract": "contracts/CommunityProxyFactory.sol:CommunityProxyFactory",
        "label": "implementationCommunity",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2505,
        "contract": "contracts/CommunityProxyFactory.sol:CommunityProxyFactory",
        "label": "implementationCollection",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 2508,
        "contract": "contracts/CommunityProxyFactory.sol:CommunityProxyFactory",
        "label": "allClones",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      }
    }
  }
}